using System;
using System.Collections;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using System.Text;

namespace Algoritms {
    class Program {
        static void Main(string[] args) {
            //Console.WriteLine(solution("1924", 2));
            Console.WriteLine(solution("4177252841", 4));

        }
        public static string solution(string number, int k) {
            // 0 인경우 예외처리
            if (number.All(x => x == '0'))
                return "0";

            // k가 최대값인경우 예외처리
            if (number.Length - k == 1)
                return number.Max().ToString();

            // 변수선언
            Stack<char> numStack = new Stack<char>();
            List<char> numList = number.ToList<char>();

            // 예외처리로 인해 List[0] 는 항상 push 가능
            numStack.Push(numList[0]);

            int idx = 1;


            for (int i = 1; i < numList.Count; i++) {
                // 뽑을 숫자가 없는 경우, 항상 Push
                if (k == 0) {
                    numStack.Push(numList[i]);
                    continue;
                };

                // Top 값과 list[idx]값의 차이가 있는 경우
                // 작을 땐 Pop
                if (numStack.Peek() < numList[i]) {
                    // 값이 크거나 같을 때까지
                    while (numStack.Count != 0 && numStack.Peek() < numList[i]) {
                        if (k == 0) break;

                        numStack.Pop();
                        k--;
                    }

                    numStack.Push(numList[i]);
                } else
                    numStack.Push(numList[i]);
            }

            string answer = new string(numStack.Reverse<char>().ToArray());

            return answer;
        }

    }
}