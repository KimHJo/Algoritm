using System;
using System.Collections;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using System.Text;

namespace Algoritms {

    public class file {
        public int index { get; set; }
        public int priority { get; set; }

        public file(int index, int priority) {
            this.index = index;
            this.priority = priority;
        }
    }

    class Program {
        static void Main(string[] args) {
            //Console.WriteLine(solution(new int[] { 2, 1, 3, 2 }, 2));

            Console.WriteLine(solution(new int[] { 1, 1, 9, 1, 1, 1 }, 0));
        }
        public static int solution(int[] priorities, int location) {
            if (priorities.Length == 1)
                return 1;

            Queue<file> que = new Queue<file>();

            // init
            for (int i = 0; i < priorities.Length; i++) {
                que.Enqueue(new file(i, priorities[i]));
            }

            int count = 0; 
            while (true) {
                if (que.Peek().priority >= que.Max(p => p.priority)) {
                    count++;

                    if (que.Peek().index == location)
                        break;

                    que.Dequeue();
                } else {
                    que.Enqueue(que.Dequeue());
                }
            }

            int answer = count;
            return answer;
        }

    }
}